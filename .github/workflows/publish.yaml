name: publish

on: workflow_dispatch

env:
  NODEJS_VERSION: "20.5.1"
  RUST_VERSION: "1.71.1"
  GITHUB_TOKEN: ${{ secrets.FONTS_PAT }}
  APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
  APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
  APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
  APPLE_ID: ${{ secrets.APPLE_ID }}
  APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
  APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

jobs:
  linux:
    name: Create build for Linux
    runs-on: ubuntu-latest
    container:
      image: "ghcr.io/amosjyng/zamm:v0.0.0-build"
      options: --user root
    env:
      HOME: /root
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.FONTS_PAT }}
          submodules: "recursive"
      - name: Build frontend and backend
        run: make copy-docker-deps svelte rust
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        with:
          tagName: v__VERSION__
          releaseName: 'Version __VERSION__'
          releaseDraft: true
          prerelease: false
          args: --target universal-apple-darwin
  mac:
    name: Create signed build for Mac OS
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.FONTS_PAT }}
          submodules: "recursive"
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: rustfmt, clippy
      - name: Build frontend and backend
        run: |
          npm install -g pnpm
          rustup target add aarch64-apple-darwin
          make svelte rust
      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        with:
          tagName: v__VERSION__
          releaseName: 'Version __VERSION__'
          releaseDraft: true
          prerelease: false
          args: --target universal-apple-darwin
